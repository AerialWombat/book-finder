{"version":3,"sources":["components/BookCard/BookCard.module.scss","components/SearchBar/SearchBar.module.scss","App.module.scss","components/Header/Header.module.scss","components/ResultViewer/ResultViewer.module.scss","components/Footer/Footer.module.scss","assets/spinner.webm","components/SearchBar/index.js","components/Header/index.js","components/BookCard/index.js","components/ErrorBoundary.js","components/ResultViewer/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","container","thumbnail","missingThumbnail","title","subtitle","searchForm","textInput","submitBtn","App","altContent","__webpack_require__","p","SearchBar","_ref","searchChange","fetchVolumes","react_default","a","createElement","className","styles","onSubmit","name","type","placeholder","onChange","value","Header","components_SearchBar","BookCard","volumeInfo","imageLinks","src","smallThumbnail","alt","authors","map","author","publisher","target","href","canonicalVolumeLink","rel","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","errorInfo","setState","style","whiteSpace","toString","componentStack","children","React","Component","ResultViewer","volumes","components_ErrorBoundary","volume","components_BookCard","Footer","GBOOKS_API_KEY","concat","process","isFetching","searchQuery","event","fetch","method","mode","then","res","json","data","items","catch","err","console","log","preventDefault","getContent","_this$state","require","autoPlay","loop","components_ResultViewer","components_Header","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ace968f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BookCard_container__1kG97\",\"thumbnail\":\"BookCard_thumbnail__1pAvR\",\"missingThumbnail\":\"BookCard_missingThumbnail__3cxUp\",\"title\":\"BookCard_title__2eMll\",\"subtitle\":\"BookCard_subtitle__3SsK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchForm\":\"SearchBar_searchForm__3ueJ7\",\"textInput\":\"SearchBar_textInput__2Ac26\",\"submitBtn\":\"SearchBar_submitBtn__3MhfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2-o7Q\",\"altContent\":\"App_altContent__20VUf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__oV9By\",\"title\":\"Header_title__2kXPI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ResultViewer_container__2l5oS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__1g-sZ\"};","module.exports = __webpack_public_path__ + \"static/media/spinner.b078f316.webm\";","import React from \"react\";\nimport styles from \"./SearchBar.module.scss\";\n\nconst SearchBar = ({ searchChange, fetchVolumes }) => {\n  return (\n    <form className={styles.searchForm} onSubmit={fetchVolumes}>\n      <input\n        className={styles.textInput}\n        name=\"searchQuery\"\n        type=\"text\"\n        placeholder=\"Search by book title, author, or ISBN... \"\n        onChange={searchChange}\n      />\n      <input className={styles.submitBtn} type=\"submit\" value=\"Search\" />\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport SearchBar from \"../SearchBar\";\nimport styles from \"./Header.module.scss\";\n\nconst Header = ({ searchChange, fetchVolumes }) => {\n  return (\n    <header className={styles.container}>\n      <h1 className={styles.title}>Book Finder</h1>\n      <SearchBar searchChange={searchChange} fetchVolumes={fetchVolumes} />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./BookCard.module.scss\";\n\nconst BookCard = ({ volumeInfo }) => {\n  return (\n    <li className={styles.container}>\n      {volumeInfo.imageLinks ? (\n        <img\n          className={styles.thumbnail}\n          src={volumeInfo.imageLinks.smallThumbnail}\n          alt=\"Cover art\"\n        />\n      ) : (\n        <p className={styles.missingThumbnail}>Missing Image</p>\n      )}\n      <h1 className={styles.title}>\n        {volumeInfo.title ? volumeInfo.title : \"Missing title data\"}\n      </h1>\n      <div>\n        <h2 className={styles.subtitle}>Author(s)</h2>\n        <div>\n          {volumeInfo.authors ? (\n            volumeInfo.authors.map(author => <p>{author}</p>)\n          ) : (\n            <p>Missing author data</p>\n          )}\n        </div>\n      </div>\n      <div>\n        <h2 className={styles.subtitle}>Publishing Company</h2>{\" \"}\n        <p>\n          {volumeInfo.publisher\n            ? volumeInfo.publisher\n            : \"Missing publisher data\"}\n        </p>\n      </div>\n\n      <a\n        target=\"_blank\"\n        href={volumeInfo.canonicalVolumeLink}\n        rel=\"noopener noreferrer\"\n      >\n        Learn More...\n      </a>\n    </li>\n  );\n};\n\nexport default BookCard;\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo\n    });\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport BookCard from \"../BookCard\";\nimport ErrorBoundary from \"../ErrorBoundary\";\nimport styles from \"./ResultViewer.module.scss\";\n\nconst ResultViewer = ({ volumes }) => {\n  return (\n    <main className={styles.container}>\n      <ErrorBoundary>\n        <ul>\n          {volumes.map(volume => {\n            return <BookCard volumeInfo={volume.volumeInfo} />;\n          })}\n        </ul>\n      </ErrorBoundary>\n    </main>\n  );\n};\n\nexport default ResultViewer;\n","import React from \"react\";\nimport styles from \"./Footer.module.scss\";\n\nconst Footer = () => {\n  return (\n    <footer className={styles.container}>\n      <p>Made by Adrian Zhan</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport ResultViewer from \"./components/ResultViewer\";\nimport Footer from \"./components/Footer\";\nimport styles from \"./App.module.scss\";\n\nconst GBOOKS_API_KEY = `${process.env.REACT_APP_GBOOKS_API_KEY}`;\n\nclass App extends Component {\n  state = {\n    isFetching: false,\n    searchQuery: null,\n    volumes: null\n  };\n\n  searchChange = event => {\n    this.setState({ searchQuery: event.target.value });\n  };\n\n  // Makes a GET request to Google Books API with the search query and then stores it in state\n  fetchVolumes = event => {\n    // Checks for blank query\n    if (!this.state.searchQuery) {\n      event.preventDefault();\n      return;\n    } else {\n      this.setState({ isFetching: true });\n      fetch(\n        `https://www.googleapis.com/books/v1/volumes?q=${\n          this.state.searchQuery\n        }&maxResults=20&key=${GBOOKS_API_KEY}`,\n        {\n          method: \"GET\",\n          mode: \"cors\"\n        }\n      )\n        .then(res =>\n          res.json().then(data => {\n            this.setState({\n              volumes: data.items\n            });\n            this.setState({ isFetching: false });\n          })\n        )\n        .catch(err => console.log(err));\n      event.preventDefault();\n    }\n  };\n\n  getContent = () => {\n    const { isFetching, volumes } = this.state;\n\n    let content;\n    if (isFetching) {\n      content = (\n        <main>\n          <video\n            className={styles.altContent}\n            src={require(\"./assets/spinner.webm\")}\n            type=\"video/webm\"\n            autoPlay\n            loop\n          />\n        </main>\n      );\n    } else if (!volumes && !isFetching) {\n      content = (\n        <main>\n          <h1 className={styles.altContent}>Search for books</h1>\n        </main>\n      );\n    } else {\n      content = <ResultViewer volumes={volumes} />;\n    }\n    return content;\n  };\n\n  render() {\n    return (\n      <div className={styles.App}>\n        <Header\n          searchChange={this.searchChange}\n          fetchVolumes={this.fetchVolumes}\n        />\n        {this.getContent()}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}